You are given the head of a linked list.

Remove every node which has a node with a strictly greater value anywhere to the right side of it.

Return the head of the modified linked list.






class Solution {
public:
    ListNode* reverseLinkedList (ListNode* head) 
    {
        // add your logic here
        ListNode* prev;
        ListNode* cur;
        prev = NULL;
        cur = head;
        ListNode* succ = NULL;
        if(head == NULL)
        {
            return head;
        }
        while(cur != NULL)
        {
            succ = cur -> next;
            cur -> next = prev;
            prev = cur;
            cur = succ;
        }
        head = prev;
        return head;

    }
    
    ListNode* removeNodes(ListNode* head) 
    {
        
       
        if(head == NULL)
        {
            return head;
        }
        
        ListNode* store = reverseLinkedList(head);
        ListNode* temp = new ListNode(store -> val);
        ListNode* rescur = temp;
        // ListNode* cur = head;
        
        while(store -> next != NULL)
        {
           if(store -> val > store -> next -> val)
           {
               store -> next = store -> next -> next;
           }
            else
            {
                store = store -> next;
                rescur -> next = new ListNode(store -> val);
                rescur = rescur -> next;
            }
        }
        ListNode* res = reverseLinkedList(temp);
        return res;
    }
    
};
