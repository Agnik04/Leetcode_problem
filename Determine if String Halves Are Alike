You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.



class Solution {
public:
    bool halvesAreAlike(string s) {
        
        int n = s.size();
        int a = 0, b = 0;
        vector<char> vow = {'A','E','I','O','U','a','e','i','o','u'};

        for(int i = 0; i < n/2; ++i)
        {
            for(auto x : vow)
            {
                if(s[i] == x)
                {
                    a++;
                    break;
                }
            }
        }

        for(int i = n/2; i < n; ++i)
        {
            for(auto x : vow)
            {
                if(s[i] == x)
                {
                    b++;
                    break;
                }
            }
        }
        return a == b;
    }
};
